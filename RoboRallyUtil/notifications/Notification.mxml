<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%"
		 height="100%"
		 creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import flash.events.TimerEvent;
			import flash.utils.Timer;
			import spark.components.Button;
			
			private var message:String;
			private var options:Array;
			private var notificationManager:NotificationManager;
			
			private function init():void
			{
				//var timer:Timer = new Timer(250);
				//timer.start();
				//timer.addEventListener(TimerEvent.TIMER, function():void
				//{
				//if (notificationMessage != null)
				//{
				notificationMessage.text = message;
				//
				for each (var aOption:NotificationOption in options)
				{
					createButton(aOption);
				}
				//timer.stop();
				//}
				//});
			
			}
			
			public function setData(notificationManager:NotificationManager, message:String, options:Array):void
			{
				this.options = options;
				this.message = message;
				this.notificationManager = notificationManager;
			
			}
			
			private function createButton(aOption:NotificationOption):void
			{
				var button:Button = new Button();
				button.label = aOption.text;
				button.addEventListener(MouseEvent.CLICK, onClick);
				
				notificationOptions.addElement(button);
			}
			
			protected function onClick(event:MouseEvent):void
			{
				notificationManager.removeNotification();
				for each (var aOption:NotificationOption in options)
				{
					if (event.target.label == aOption.text)
					{
						if (aOption.callback != null)
						{
							if (aOption.data != null) {
								aOption.callback(aOption.data);
							}
							else 
							{
								aOption.callback();
							}
						}
					}
				}
			
			}
		]]>
	</fx:Script>
	<s:Rect width="100%"
			height="100%">
		<s:fill>
			<s:SolidColor color="0x000000"
						  alpha="0.8">
			</s:SolidColor>
		</s:fill>
	</s:Rect>
	<s:BorderContainer width="300"
					   height="125"
					   horizontalCenter="0"
					   verticalCenter="0"
					   cornerRadius="15">
		<s:backgroundFill>
			<s:BitmapFill source="@Embed(source='assets/NotificationBG.png')">
			</s:BitmapFill>
		</s:backgroundFill>
		<s:Label id="notificationMessage"
				 left="10"
				 right="10"
				 top="10"
				 bottom="60"
				 text="Label"
				 textAlign="center"
				 verticalAlign="middle" />
		<s:HGroup id="notificationOptions"
				  left="10"
				  right="10"
				  top="70"
				  bottom="10"
				  horizontalAlign="center"
				  verticalAlign="middle">
		</s:HGroup>

	</s:BorderContainer>
</s:Group>
